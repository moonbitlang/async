package "moonbitlang/async"

import(
  "moonbitlang/async/context"
)

// Values
async fn sleep(Int) -> Unit raise

async fn wait_fd(Int) -> Unit raise

async fn[X] with_context((@context.Context) -> X raise) -> X raise

fn with_event_loop((@context.Context) -> Unit raise) -> Unit raise

// Types and methods

// Type aliases
pub typealias @context.Context as Context

pub typealias @context.Task as Task

// Traits

