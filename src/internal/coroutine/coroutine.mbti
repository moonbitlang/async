package "moonbitlang/async/internal/coroutine"

// Values
fn current_coroutine() -> Coroutine

fn next_expire_time() -> Int64?

fn no_more_work() -> Bool

async fn pause() -> Unit raise

async fn protect_from_cancel(async () -> Unit raise) -> Unit raise

fn reschedule() -> Unit

async fn sleep(Int) -> Unit raise

fn spawn(async () -> Unit raise, on_error? : (Error) -> Unit) -> Coroutine

async fn suspend() -> Unit raise

// Types and methods
pub type! Cancelled
impl Show for Cancelled

type Coroutine
fn Coroutine::cancel(Self) -> Unit
fn Coroutine::unwrap(Self) -> Unit raise
async fn Coroutine::wait(Self) -> Unit raise
fn Coroutine::wake(Self) -> Unit
impl Eq for Coroutine
impl Hash for Coroutine

// Type aliases

// Traits

