name: check

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  stable-build:
    strategy:
      fail-fast: true
      matrix:
        os:
          - name: ubuntu-latest
            path: ubuntu_x86_64_moon_setup
          - name: macos-latest
            path: mac_m1_moon_setup

    runs-on: ${{ matrix.os.name }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: moon check
        run: moon check --deny-warn

      - name: moon test
        run: |
          moon test --release
          moon test

  bleeding-build:
    strategy:
      fail-fast: true
      matrix:
        os:
          - name: ubuntu-latest
            path: ubuntu_x86_64_moon_setup
          - name: macos-latest
            path: mac_m1_moon_setup

    runs-on: ${{ matrix.os.name }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s bleeding
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: moon check
        run: moon check

      - name: moon test
        run: |
          moon test --release
          moon test

  moon-format:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: format diff
        run: |
          moon fmt
          git diff --exit-code

  moon-info:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: moon info
        run: |
          moon info
          git diff --exit-code

  coverage-check:
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: moon test
        run: moon test --enable-coverage

      - name: coverage report
        run: |
          moon coverage report -f summary > coverage_summary.txt
          # Put the coverage report in the pipline output
          cat coverage_summary.txt >> "$GITHUB_STEP_SUMMARY"
          # We don't use the official coveralls upload tool because it takes >1min to build itself
          moon coverage report \
            -f coveralls \
            -o codecov_report.json \
            --service-name github \
            --service-job-id "$GITHUB_RUN_NUMBER" \
            --service-pull-request "${{ github.event.number }}" \
            --send-to coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
