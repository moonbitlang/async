name: check

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  stable-build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: macos-latest
            path: mac_m1_moon_setup

    runs-on: ${{ matrix.os.name }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: moon check
        run: moon check --deny-warn

      - name: moon test
        run: |
          # Run test with --test-failure-json to avoid the output with colors can't be rendered properly in GitHub Actions
          for i in $(seq 1 100); do
            moon test -p moonbitlang/async/fs --test-failure-json
          done

  nightly-build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: macos-latest
            path: mac_m1_moon_setup

    runs-on: ${{ matrix.os.name }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s nightly
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: enable new moon backend
        run: |
          export MOON_UNSTABLE=rupes_recta

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: moon check
        run: |
          moon check
          moon check -C examples

      - name: moon test
        run: |
          # Run test with --test-failure-json to avoid the output with colors can't be rendered properly in GitHub Actions
          for i in $(seq 1 100); do
            moon test -p moonbitlang/async/fs --test-failure-json
          done
