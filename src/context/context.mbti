package "moonbitlang/async/context"

// Values
async fn[X] with_context((Context) -> X raise) -> X raise

// Types and methods
pub type! Cancelled

type Context
fn[X] Context::spawn(Self, () -> X raise) -> Task[X]

type Task[X]
fn[X] Task::cancel(Self[X]) -> Unit
async fn[X] Task::wait(Self[X]) -> X raise

// Type aliases

// Traits

