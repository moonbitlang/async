// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/async/tls"

import(
  "moonbitlang/async/io"
)

// Values

// Errors
pub suberror ConnectionClosed
impl Show for ConnectionClosed

pub suberror OpenSSLError String
impl Show for OpenSSLError

// Types and methods
type TLS
async fn[Inner : @io.Reader + @io.Writer] TLS::client(Inner, verify? : Bool, sni? : Bytes) -> Self raise
async fn[R : @io.Reader, W : @io.Writer] TLS::client_from_pair(R, W, verify? : Bool, sni? : Bytes) -> Self raise
fn TLS::close(Self) -> Unit
async fn TLS::read(Self, FixedArray[Byte], offset? : Int, max_len? : Int) -> Int raise
async fn[Inner : @io.Reader + @io.Writer] TLS::server(Inner, private_key_file~ : Bytes, private_key_type~ : X509FileType, certificate_file~ : Bytes, certificate_type~ : X509FileType) -> Self raise
async fn[R : @io.Reader, W : @io.Writer] TLS::server_from_pair(R, W, private_key_file~ : Bytes, private_key_type~ : X509FileType, certificate_file~ : Bytes, certificate_type~ : X509FileType) -> Self raise
async fn TLS::shutdown(Self) -> Unit raise
impl @io.Reader for TLS
impl @io.Writer for TLS

pub(all) enum X509FileType {
  PEM
  ANS1
}

// Type aliases

// Traits

