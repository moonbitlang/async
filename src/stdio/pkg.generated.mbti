// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/async/stdio"

import(
  "moonbitlang/async/io"
)

// Values
let stderr : Output

let stdin : Input

let stdout : Output

// Errors

// Types and methods
type Input
fn Input::fd(Self) -> Int
async fn Input::read(Self, FixedArray[Byte], offset? : Int, max_len? : Int) -> Int // from trait `@io.Reader`
async fn Input::read_all(Self) -> &@io.Data // from trait `@io.Reader`
async fn Input::read_exactly(Self, Int) -> Bytes // from trait `@io.Reader`
impl @io.Reader for Input

type Output
fn Output::fd(Self) -> Int
async fn Output::write(Self, &@io.Data) -> Unit // from trait `@io.Writer`
async fn Output::write_once(Self, Bytes, offset~ : Int, len~ : Int) -> Int // from trait `@io.Writer`
async fn Output::write_reader(Self, &@io.Reader) -> Unit // from trait `@io.Writer`
#deprecated
async fn Output::write_string(Self, StringView, encoding~ : @io.Encoding) -> Unit // from trait `@io.Writer`
impl @io.Writer for Output

// Type aliases

// Traits

