package "moonbitlang/async"

// Values
async fn sleep(Int) -> Unit raise

async fn[X] spawn(() -> X raise) -> Task[X]

async fn wait_fd(Int) -> Unit raise

fn with_event_loop(() -> Unit raise) -> Unit raise

// Types and methods
type Task[X]
fn[X] Task::cancel(Self[X]) -> Unit
async fn[X] Task::wait(Self[X]) -> X raise

// Type aliases

// Traits

