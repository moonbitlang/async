// Copyright 2025 International Digital Economy Academy
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

///|
async test "read_all" {
  let dir = @fs.opendir("src/fs")
  defer dir.close()
  let list = dir.read_all()
  list.sort()
  @json.inspect(list, content=(["fs.mbt","stub.c","dir.mbt","README.md","utils.mbt","dir_test.mbt","eof_test.mbt","README.mbt.md","moon.pkg.json","seek_test.mbt","stat_test.mbt","walk_test.mbt","mkdir_test.mbt","access_test.mbt","create_test.mbt","read_all_test.mbt","realpath_test.mbt","pkg.generated.mbti","text_file_test.mbt","timestamp_test.mbt"]))
}

///|
async test "as_dir" {
  let dir_file = @fs.open("src/fs", mode=ReadOnly)
  defer dir_file.close()
  guard dir_file.kind() is Directory
  let dir = dir_file.as_dir()
  defer dir.close()
  let list = dir.read_all()
  list.sort()
  let kinds = []
  for file in list {
    let path = "src/fs/" + file
    let kind = {
      let file = @fs.open(path, mode=ReadOnly)
      defer file.close()
      file.kind()
    }
    assert_eq(kind, @fs.kind(path))
    kinds.push("\{file}: \{kind}")
  }
  @json.inspect(kinds, content=(["fs.mbt: Regular","stub.c: Regular","dir.mbt: Regular","README.md: Regular","utils.mbt: Regular","dir_test.mbt: Regular","eof_test.mbt: Regular","README.mbt.md: Regular","moon.pkg.json: Regular","seek_test.mbt: Regular","stat_test.mbt: Regular","walk_test.mbt: Regular","mkdir_test.mbt: Regular","access_test.mbt: Regular","create_test.mbt: Regular","read_all_test.mbt: Regular","realpath_test.mbt: Regular","pkg.generated.mbti: Regular","text_file_test.mbt: Regular","timestamp_test.mbt: Regular"]))
}
