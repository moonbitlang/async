// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/async/http"

import(
  "moonbitlang/async/io"
)

// Values
#alias(request, deprecated)
async fn get(Bytes, headers? : Array[Header], protocol? : Protocol, port? : Int) -> (Response, Bytes) raise

async fn post(Bytes, Bytes, headers? : Array[Header], protocol? : Protocol, port? : Int) -> (Response, Bytes) raise

async fn put(Bytes, Bytes, headers? : Array[Header], protocol? : Protocol, port? : Int) -> (Response, Bytes) raise

async fn[Writer : @io.Writer] send_request(Writer, Request, Body) -> Unit raise

async fn[Writer : @io.Writer] send_response(Writer, Response, Body) -> Unit raise

// Errors
pub suberror HttpProtocolError {
  BadRequest
  HttpVersionNotSupported(String)
  NotImplemented
}
impl Show for HttpProtocolError

// Types and methods
pub(all) enum Body {
  Empty
  Fixed(Bytes)
  Stream(&@io.Reader)
}

type Client
fn Client::close(Self) -> Unit
async fn Client::connect(Bytes, protocol? : Protocol, port? : Int) -> Self raise
async fn Client::get(Self, Bytes, headers? : Array[Header], body? : Body) -> Response raise
async fn Client::post(Self, Bytes, Body, headers? : Array[Header]) -> Response raise
async fn Client::put(Self, Bytes, Body, headers? : Array[Header]) -> Response raise
async fn Client::request(Self, Request, Body) -> Response raise
async fn Client::shutdown(Self) -> Unit raise
async fn Client::skip_body(Self) -> Unit raise
impl @io.Reader for Client

pub(all) struct Header(Bytes, Bytes)


pub(all) enum Protocol {
  Http
  Https
}
fn Protocol::default_port(Self) -> Int

type Reader
fn[R : @io.Reader] Reader::new(R) -> Self
async fn Reader::read(Self, FixedArray[Byte], offset? : Int, max_len? : Int) -> Int raise
async fn Reader::read_request(Self) -> Request raise
async fn Reader::read_response(Self) -> Response raise
async fn Reader::skip_body(Self) -> Unit raise
impl @io.Reader for Reader

pub(all) struct Request {
  meth : RequestMethod
  path : Bytes
  headers : Array[Header]
}

pub(all) enum RequestMethod {
  Get
  Head
  Post
  Put
  Delete
  Connect
  Options
  Trace
  Patch
}
impl Show for RequestMethod

pub(all) struct Response {
  code : Int
  reason : Bytes
  headers : Array[Header]
}

// Type aliases

// Traits

