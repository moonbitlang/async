// Copyright 2025 International Digital Economy Academy
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

///|
test "read_all basic" {
  let log = StringBuilder::new()
  @async.with_event_loop(fn(root) {
    let (r, w) = @pipe.pipe()
    root.spawn_bg(() => writer(log, w))
    log.write_object(r.read_all())
  })
  inspect(
    log.to_string(),
    content=(
      #|writing 4 bytes of data
      #|writing 4 bytes of data
      #|writing 4 bytes of data
      #|b"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c"
    ),
  )
}

///|
test "read_all large data" {
  let log = StringBuilder::new()
  @async.with_event_loop(fn(root) {
    let (r, w) = @pipe.pipe()
    root.spawn_bg(fn() {
      defer w.close()
      w.write(Bytes::make(4097, 0))
    })
    log.write_object(r.read_all().length())
  })
  inspect(log.to_string(), content="4097")
}
